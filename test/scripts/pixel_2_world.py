import numpy as np
import cv2



def pixel_2_world(s,u,v,A,R,t) :
    k=np.array([[u],[v],[1]])
    k=s*k
    # print(k.shape)
    
    A_inv=np.linalg.inv(A)
    # print((A_inv))
    # print(A_inv.shape)


    l=np.dot(A_inv,k)
    # print(l.shape)
    # print(t)
    # print(l)

    m=np.subtract(l,t)
#     print(m.shape)
    
    R_inv=np.linalg.inv(R)
    # print(R_inv.shape)
    
    XYZ=np.dot(R_inv,m)
    
    # print(XYZ.shape)
    print(XYZ)
    return XYZ


# test_s=-50.56691751681569
# test_u=619.19771163
# test_v=346.02172619
# test_R=[[-9.98879970e-01 , 4.60899074e-02 ,-1.07016659e-02],
#         [-4.44248940e-02 ,-8.35695099e-01 , 5.47393945e-01],
#         [1.62860065e-02 , 5.47256268e-01 , 8.36806635e-01] ]
# test_t=[[1.12433220e+01], [-1.45086000e+01],[ -9.29174862e+01]]
# test_A=[[1.11378494e+03 ,0.00000000e+00, 6.38267372e+02],
#         [0.00000000e+00,  1.09831917e+03,  3.46950080e+02],
#         [0.00000000e+00  ,0.00000000 ,1.00000000e+00]]

test_s=1
test_u=304
test_v=314

# quad wrt world r,t, matrix
test_R=[[1 ,0,0],
        [0 ,1 , 0],
        [0 , 0 , 1] ]



#test_r2 is fixed and is camera wrt quad rotation matrix

# test_R_2=[[0.9238795325 ,0,0.3826834324],
#         [0 ,1 , 0],
#         [-0.3826834324 , 0 ,0.9238795325] ]

# test_R=np.dot(test_R_1,test_R_2)

# print(test_R)

test_t=[[0.0], [0.0],[0.0]]
# test_t=[[-0.037668], [0.018656],[0.11624]]
test_A=[[476.7030836014194 ,0.0,400.5],
        [0.0,  476.7030836014194,   400.5],
        [0.0  ,0.0,1.0]]
# 439.0310522629407, 0.0, 304.5, 0.0, 439.0310522629407, 304.5, 0.0, 0.0, 1.0


pixel_2_world(test_s,test_u,test_v,test_A,test_R,test_t)



#############111111111#########
# { XYZ1
# [[10.9]
#  [10.7]
#  [43.4]
#  [ 1. ]]

# test_s=-50.56691751681569
# test_u=619.19771163
# test_v=346.02172619
# test_R=[[-9.98879970e-01 , 4.60899074e-02 ,-1.07016659e-02],
#         [-4.44248940e-02 ,-8.35695099e-01 , 5.47393945e-01],
#         [1.62860065e-02 , 5.47256268e-01 , 8.36806635e-01] ]
# test_t=[[1.12433220e+01], [-1.45086000e+01],[ -9.29174862e+01]]
# test_A=[[1.11378494e+03 ,0.00000000e+00, 6.38267372e+02],
#         [0.00000000e+00,  1.09831917e+03,  3.46950080e+02],
#         [0.00000000e+00  ,0.00000000 ,1.00000000e+00]]